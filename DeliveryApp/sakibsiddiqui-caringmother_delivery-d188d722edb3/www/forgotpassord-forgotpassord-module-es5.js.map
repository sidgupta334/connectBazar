{"version":3,"sources":["webpack:///src/app/forgotpassord/forgotpassord.page.html","webpack:///src/app/forgotpassord/forgotpassord-routing.module.ts","webpack:///src/app/forgotpassord/forgotpassord.module.ts","webpack:///src/app/forgotpassord/forgotpassord.page.scss","webpack:///src/app/forgotpassord/forgotpassord.page.ts"],"names":["routes","path","component","ForgotpassordPageRoutingModule","imports","forChild","exports","ForgotpassordPageModule","providers","declarations","ForgotpassordPage","fb","http","api","loadingController","alertController","router","alert","checkValid","otpFormValid","otpPost","forgotPassword","EmailForm","group","Email","required","email","OtpForm","otp","newPassword","value","invalid","create","message","loading","present","p","subscribe","res","localStorage","setItem","dismiss","presentToast","error","status","getItem","postOtp","presentAlertConfirm","cssClass","header","buttons","text","role","handler","blah","navigate","controls","selector","template"],"mappings":"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","file":"forgotpassord-forgotpassord-module-es5.js","sourcesContent":["export default \"\\n<ion-content class=\\\"background\\\"  style=\\\"background-color: rgb(6, 15, 66);\\\">\\n\\n\\n\\n  <ng-container *ngIf=\\\"forgotPassword; then forgotEmailForm\\\"></ng-container>\\n  <ng-container *ngIf=\\\"otpPost; then otpEnterForm\\\"></ng-container>\\n\\n <ng-template #forgotEmailForm> \\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-icon name=\\\"arrow-back\\\" routerLink=\\\"/login\\\"></ion-icon>\\n     </ion-buttons>\\n</ion-toolbar>\\n    <ion-grid>\\n      <p class=\\\"text\\\">Forgot your password? <br> Let's recover it</p>\\n      <ion-card>\\n      <form class=\\\"ion-padding\\\" [formGroup]=\\\"EmailForm\\\" (ngSubmit)=\\\"getEmail(EmailForm.value)\\\">\\n\\n        <ion-row >\\n          <ion-col class=\\\"ion-float-right\\\">\\n            <div>\\n              <ion-item  style=\\\"background-color: transparent;\\\">\\n                <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                  Email \\n                </ion-label>\\n                <ion-input  type=\\\"text\\\" formControlName=\\\"Email\\\" style=\\\"color: #fff;margin-left: -15px;\\\">  </ion-input>\\n              </ion-item>\\n              <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.Email.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.Email.errors.required\\\">*Email is required</div>\\n                <div *ngIf=\\\"f.Email.errors.email\\\" >Enter valid *email</div>\\n            </div>\\n            </div>\\n          </ion-col>\\n\\n          <button class=\\\"button-submit\\\"  color=\\\"primary\\\" type=\\\"ngSubmit\\\">\\n            Send OTP</button>\\n       \\n        </ion-row>\\n      </form>\\n    </ion-card>\\n    </ion-grid>\\n  </ng-template>\\n\\n\\n  <ng-template #otpEnterForm> \\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\"  (click)=\\\"route()\\\">\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n       </ion-buttons>\\n  </ion-toolbar>\\n  <ion-grid>\\n    <p class=\\\"text\\\">Forgot your password? <br> Let's recover it</p>\\n    <ion-card>\\n    <form class=\\\"ion-padding\\\" [formGroup]=\\\"OtpForm\\\" (ngSubmit)=\\\"postOtp(OtpForm.value)\\\">\\n      <ion-row>\\n        <ion-col class=\\\"ion-float-right\\\">\\n          <div>\\n            <ion-item class=\\\"input-password\\\">\\n              <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                New Password</ion-label>\\n              <ion-input style=\\\"color: #fff;\\\" type=\\\"password\\\"  formControlName=\\\"newPassword\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div id=\\\"errorStyle\\\" *ngIf=\\\"otpFormValid && frmValid.newPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"frmValid.newPassword.errors.required\\\">*Password is required</div>\\n          </div>\\n            <ion-item class=\\\"input-password\\\">\\n              <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                OTP</ion-label>\\n              <ion-input style=\\\"color: #fff;\\\" type=\\\"text\\\"  formControlName=\\\"otp\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div id=\\\"errorStyle\\\" *ngIf=\\\"otpFormValid && frmValid.otp.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"frmValid.otp.errors.required\\\">*Otp is required</div>\\n          \\n          </div>\\n          </div>\\n        </ion-col>\\n\\n        <button  class=\\\"button-submit\\\" color=\\\"primary\\\"color=\\\"primary\\\"  type=\\\"ngSubmit\\\">\\n          Update Password</button>\\n \\n      </ion-row>\\n    </form>\\n    </ion-card>\\n  </ion-grid>\\n  </ng-template>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotpassordPage } from './forgotpassord.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotpassordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotpassordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { IonicModule } from '@ionic/angular';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ForgotpassordPageRoutingModule } from './forgotpassord-routing.module';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { ForgotpassordPage } from './forgotpassord.page';\nimport { LoginService } from '../login/login.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    IonicModule,\n    ForgotpassordPageRoutingModule\n  ],\n  providers: [LoginService\n\n  ],\n  declarations: [ForgotpassordPage]\n})\nexport class ForgotpassordPageModule {}\n","export default \".text {\\n  color: #a4a4a4;\\n  text-align: center;\\n  font-size: 30px;\\n  margin-top: 44%;\\n}\\n\\n.input-password ion-label {\\n  flex: 0 0 130px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9yZ290cGFzc29yZC9EOlxcUHJvamVjdHNcXGNvbm5lY3RCYXphclxcRGVsaXZlcnlBcHBcXHNha2lic2lkZGlxdWktY2FyaW5nbW90aGVyX2RlbGl2ZXJ5LWQxODhkNzIyZWRiMy9zcmNcXGFwcFxcZm9yZ290cGFzc29yZFxcZm9yZ290cGFzc29yZC5wYWdlLnNjc3MiLCJzcmMvYXBwL2ZvcmdvdHBhc3NvcmQvZm9yZ290cGFzc29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtBQ0FGOztBREtFO0VBQ0UsZUFBQTtBQ0ZKIiwiZmlsZSI6InNyYy9hcHAvZm9yZ290cGFzc29yZC9mb3Jnb3RwYXNzb3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnRleHQge1xuICBjb2xvcjogI2E0YTRhNDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDMwcHg7XG4gIG1hcmdpbi10b3A6IDQ0JTtcbn1cblxuLmlucHV0LXBhc3N3b3JkIHtcblxuICBpb24tbGFiZWwge1xuICAgIGZsZXg6IDAgMCAxMzBweDtcbiAgfVxuXG59XG4iLCIudGV4dCB7XG4gIGNvbG9yOiAjYTRhNGE0O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgbWFyZ2luLXRvcDogNDQlO1xufVxuXG4uaW5wdXQtcGFzc3dvcmQgaW9uLWxhYmVsIHtcbiAgZmxleDogMCAwIDEzMHB4O1xufSJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { StatusBar } from \"@ionic-native/status-bar/ngx\";\n\nimport {\n  FormControl,\n  Validators,\n  FormBuilder,\n  FormGroup,\n} from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LoginService } from \"../login/login.service\";\nimport { error } from \"protractor\";\nimport { CommomService } from \"../commom.service\";\nimport { LoadingController, AlertController } from \"@ionic/angular\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-forgotpassord\",\n  templateUrl: \"./forgotpassord.page.html\",\n  styleUrls: [\"./forgotpassord.page.scss\"],\n})\nexport class ForgotpassordPage implements OnInit {\n  EmailForm: FormGroup;\n  OtpForm: FormGroup;\n  checkValid = false;\n  otpFormValid = false;\n\n\n  otpPost = false;\n  forgotPassword = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private api: LoginService,\n    private loadingController: LoadingController,\n    public alertController: AlertController,\n    private router: Router,\n    private alert: CommomService\n  ) {}\n\n  ngOnInit() {\n    this.EmailForm = this.fb.group({\n      Email: [\"\", [Validators.required, Validators.email]],\n    });\n\n    this.OtpForm = this.fb.group({\n      otp: [\"\", [Validators.required]],\n      newPassword: [\"\", [Validators.required]],\n    });\n  }\n\n  // getter method to access form fields\n  get f() {\n    return this.EmailForm.controls;\n  }\n\n  // getter method to access form fields\n  get frmValid() {\n    return this.OtpForm.controls;\n  }\n\n  route() {\n    this.otpPost = false;\n    this.forgotPassword = true;\n  }\n\n  async getEmail(value) {\n    this.checkValid = true;\n    if (this.EmailForm.invalid) {\n      return;\n    }\n    const loading = await this.loadingController.create({\n      message: \"Please wait...\",\n    });\n    loading.present();\n\n    const p = this.api.forgotPassword(value.Email);\n    p.subscribe(\n      (res) => {\n        localStorage.setItem('grocericaforgotEmail', value.Email);\n        loading.dismiss();\n        this.alert.presentToast(\"Otp Sent Successfully to your email\");\n        this.forgotPassword = false;\n        this.otpPost = true;\n        this.otpFormValid = false;\n\n      },\n      (error) => {\n        loading.dismiss();\n        if (error.error.message === \"User not found\" && error.status === 400) {\n          this.alert.presentToast(error.error.message);\n        }\n        if (error.status === 500) {\n          this.alert.presentToast(\"Something went wrong\");\n        }\n      }\n    );\n  }\n\n  // =======form method for otp validation==========//\n  async postOtp(value) {\n    this.otpFormValid = true;\n    if (this.OtpForm.invalid) {\n      return;\n    }\n    value.email=localStorage.getItem('grocericaforgotEmail');\n    const loading = await this.loadingController.create({\n      message: \"Please wait...\",\n    });\n    loading.present();\n\n    const p = this.api.postOtp(value);\n    p.subscribe((res) => {\n      loading.dismiss();\n      this.presentAlertConfirm(res.message);\n    },\n    (error) => {\n      loading.dismiss();\n      if (error.error.message === \"User not found\" && error.status === 400) {\n        this.alert.presentToast(error.error.message);\n      }\n      if (error.error.message === \"OTP doesn't matched\" && error.status === 500) {\n        this.alert.presentToast(error.error.message);\n      }\n\n\n    });\n  }\n\n  async presentAlertConfirm(message) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: message,\n      message: 'Login to your Account',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n          text: 'Okay',\n          handler: () => {\n            this.router.navigate(['login']);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n"]}