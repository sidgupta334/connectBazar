{"version":3,"sources":["webpack:///src/app/signup/signup.page.html","webpack:///src/app/signup/signup-routing.module.ts","webpack:///src/app/signup/signup.module.ts","webpack:///src/app/signup/signup.page.scss","webpack:///src/app/signup/signup.page.ts","webpack:///src/app/signup/signup.service.ts"],"names":["routes","path","component","SignupPageRoutingModule","imports","forChild","exports","SignupPageModule","providers","declarations","SignupPage","api","formBuilder","alert","router","datePicker","loadingController","checkValid","SignUpForm","group","dob","required","email","fullName","gender","mobile","pattern","password","value","user","invalid","p","registerUser","create","message","loading","present","subscribe","res","dismiss","localStorage","setItem","userId","navigate","error","status","mes","presentToast","show","date","Date","mode","androidTheme","ANDROID_THEMES","THEME_HOLO_DARK","okText","todayText","then","myDate","getDate","toLocaleString","month","getFullYear","err","console","log","controls","selector","template","SignupService","http","baseUrl","url","headers","append","param","post","pipe","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,uBAAuB;AAAA;AAAA,KAApC;;AAAaA,2BAAuB,6DAJnC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAImC,GAAvBH,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSb,QAAaI,gBAAgB;AAAA;AAAA,KAA7B;;AAAaA,oBAAgB,6DAb5B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,8EANO,CADD;AASRI,eAAS,EAAE,CAAC,6DAAD,EAAgB,wEAAhB,CATH;AAWRC,kBAAY,EAAE,CAAC,uDAAD;AAXN,KAAT,CAa4B,GAAhBF,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACzBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAaG,UAAU;AAMrB,0BACUC,GADV,EAEUC,WAFV,EAGUC,KAHV,EAIUC,MAJV,EAKUC,UALV,EAMUC,iBANV,EAM8C;AAAA;;AALpC,aAAAL,GAAA,GAAAA,GAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AATV,aAAAC,UAAA,GAAa,KAAb;AAUK;;AAbgB;AAAA;AAAA,mCAeV;AACT,eAAKC,UAAL,GAAkB,KAAKN,WAAL,CAAiBO,KAAjB,CAAuB;AAEvCC,eAAG,EAAC,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,CAAL,CAFmC;AAGvCC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWC,KAAjC,CAAL,CAHgC;AAIvCC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL,CAJ6B;AAKvCG,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,CAAL,CAL+B;AAMvCI,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,OAAX,CAAmB,cAAnB,CAAD,EAAqC,0DAAWL,QAAhD,CAAL,CAN+B;AAOvCM,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWN,QAAZ,CAAL;AAP6B,WAAvB,CAAlB;AAUD,SA1BoB,CA4BrB;;AA5BqB;AAAA;AAAA,qCAiCFO,KAjCE,EAiCK;;;;;;;;;AACxBA,yBAAK,CAACC,IAAN,GAAa,MAAb;AAEA,yBAAKZ,UAAL,GAAkB,IAAlB;;yBACI,KAAKC,UAAL,CAAgBY,O;;;;;;;;AAGdC,qB,GAAI,KAAKpB,GAAL,CAASqB,YAAT,CAAsBJ,KAAtB,C;;AACM,2BAAM,KAAKZ,iBAAL,CAAuBiB,MAAvB,CAA8B;AAClDC,6BAAO,EAAE;AADyC,qBAA9B,CAAN;;;AAAVC,2B;AAGNA,2BAAO,CAACC,OAAR;AAEAL,qBAAC,CAACM,SAAF,CAAY,UAAOC,GAAP;AAAA,6BAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB,uCAAMH,OAAO,CAACI,OAAR,EAAN;;AADyB;AAEzBC,4CAAY,CAACC,OAAb,CAAqB,QAArB,EAA8BH,GAAG,CAACI,MAAlC;AACA,qCAAK5B,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,eAAD,CAArB;;AAHyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAf;AAAA,qBAAZ,EAKE;AACA,8BAAOC,KAAP;AAAA,6BAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB,uCAAMT,OAAO,CAACI,OAAR,EAAN;;AADoB;AAAA,sCAEhBK,KAAK,CAACC,MAAN,KAAiB,GAFD;AAAA;AAAA;AAAA;;AAAA;AAGlB,uCAAMV,OAAO,CAACI,OAAR,EAAN;;AAHkB;AAIZO,mCAJY,GAIN,iBAJM;AAKlB,qCAAKjC,KAAL,CAAWkC,YAAX,CAAwBD,GAAxB;;AALkB;AAAA;AASpB,uCAAMX,OAAO,CAACI,OAAR,EAAN;;AAToB;AAUpB,oCAAIK,KAAK,CAACC,MAAN,KAAiB,GAAjB,IAAwBD,KAAK,CAACA,KAAN,CAAYV,OAAZ,KAAwB,sBAApD,EAA4E;AAC1E,uCAAKrB,KAAL,CAAWkC,YAAX,CAAwB,sBAAxB;AAED;;AAbmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAtB;AAAA,qBANF;;;;;;;;;AAqBD;AAnEoB;AAAA;AAAA,yCAsEP;AAAA;;AACZ,eAAKhC,UAAL,CAAgBiC,IAAhB,CAAqB;AACnBC,gBAAI,EAAE,IAAIC,IAAJ,EADa;AAEnBC,gBAAI,EAAE,MAFa;AAGnBC,wBAAY,EAAE,KAAKrC,UAAL,CAAgBsC,cAAhB,CAA+BC,eAH1B;AAInBC,kBAAM,EAAC,WAJY;AAKnBC,qBAAS,EAAC;AALS,WAArB,EAMGC,IANH,CAOE,UAAAR,IAAI,EAAI;AACN,kBAAI,CAACS,MAAL,GAAcT,IAAI,CAACU,OAAL,KAAe,GAAf,GAAmBV,IAAI,CAACW,cAAL,CAAoB,SAApB,EAA+B;AAAEC,mBAAK,EAAE;AAAT,aAA/B,CAAnB,GAAqE,GAArE,GAAyEZ,IAAI,CAACa,WAAL,EAAvF;AACD,WATH,EAUE,UAAAC,GAAG;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,GAAnD,CAAJ;AAAA,WAVL;AAYD;AAnFoB;AAAA;AAAA,4BA6Bb;AACN,iBAAO,KAAK7C,UAAL,CAAgBgD,QAAvB;AACD;AA/BoB;;AAAA;AAAA,OAAvB;;;;cAOiB;;cACQ;;cACN;;cACC;;cACI;;cACO;;;;AAZlBxD,cAAU,6DALtB,gEAAU;AACTyD,cAAQ,EAAE,YADD;AAETC,cAAQ,EAAR;AAAA;AAAA,4FAFS;;;;AAAA,KAAV,CAKsB,GAAV1D,UAAU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,QAAa2D,aAAa;AAGxB,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFpB,aAAAC,OAAA,GAAU,0EAAoBC,GAA9B;AAEyC;;AAHjB;AAAA;AAAA,qCAMX5C,KANW,EAMJ;AAClB,cAAM6C,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AAEA,cAAMC,KAAK,GAAG;AAChB,mBAAW/C,KAAK,CAACR,GADD;AAEhB,qBAAaQ,KAAK,CAACN,KAFH;AAGhB,wBAAgBM,KAAK,CAACL,QAHN;AAIhB,sBAAUK,KAAK,CAACJ,MAJA;AAKhB,sBAAcI,KAAK,CAACH,MALJ;AAMhB,wBAAgBG,KAAK,CAACD,QANN;AAOhB,wBAAYC,KAAK,CAACC;AAPF,WAAd;AAUA,iBAAO,KAAKyC,IAAL,CAAUM,IAAV,CAAoB,KAAKL,OAAL,GAAe,eAAnC,EACLI,KADK,EACE;AAAEF,mBAAO,EAAPA;AAAF,WADF,EACeI,IADf,CACoB,2DAAI,UAAAvC,GAAG;AAAA,mBAAIA,GAAJ;AAAA,WAAP,CADpB,CAAP;AAGD;AAvBuB;;AAAA;AAAA,OAA1B;;;;cAG4B;;;;AAHf+B,iBAAa,6DAHzB,iEAAW;AACVS,gBAAU,EAAE;AADF,KAAX,CAGyB,GAAbT,aAAa,CAAb","file":"signup-signup-module-es5.js","sourcesContent":["export default \"<img src=\\\"../../assets/login.png\\\" style=\\\"position: fixed;background-color: rgb(6, 15, 66);\\\" alt=\\\"Connect Bazar\\\" />\\n\\n<ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-icon name=\\\"arrow-back\\\" routerLink=\\\"/login\\\"></ion-icon>\\n    </ion-buttons>\\n</ion-toolbar>\\n\\n\\n<ion-content class=\\\"background\\\">\\n    <p class=\\\"text\\\">Get Onboard <br>Register Here</p>\\n\\n    <ion-grid>\\n        <ion-card>\\n            <form class=\\\"ion-padding\\\" [formGroup]=\\\"SignUpForm\\\" (ngSubmit)=\\\"registerUser(SignUpForm.value)\\\">\\n                <ion-row>\\n                    <ion-col class=\\\"ion-float-right\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                                FullName</ion-label>\\n\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"fullName\\\">\\n                            </ion-input>\\n                        </ion-item>\\n                        <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.fullName.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.fullName.errors.required\\\">*FullName is required</div>\\n                        </div>\\n                    </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                    <ion-col class=\\\"ion-float-right\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                                Mobile</ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"mobile\\\">\\n                            </ion-input>\\n                        </ion-item>\\n                        <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.mobile.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.mobile.errors.required\\\">*Mobile no is required</div>\\n                            <div *ngIf=\\\"f.mobile.errors.pattern\\\">Enter valid *Mobile No</div>\\n                        </div>\\n                    </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-item>\\n                            <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                                Email</ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"email\\\">\\n                            </ion-input>\\n                        </ion-item>\\n                        <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.email.errors.required\\\">*Email is required</div>\\n                            <div *ngIf=\\\"f.email.errors.email\\\">Enter valid *email</div>\\n                        </div>\\n                    </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-item>\\n                            <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                                Password</ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"password\\\">\\n                            </ion-input>\\n                        </ion-item>\\n                        <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.password.errors.required\\\">*Password is required</div>\\n                        </div>\\n                    </ion-col>\\n                </ion-row>\\n\\n\\n\\n                <ion-row>\\n                    <ion-col>\\n\\n\\n                        <ion-item>\\n                            <ion-label style=\\\"color: #919090;\\\">DOB</ion-label>\\n                            <ion-datetime value=\\\"1990-02-19\\\" formControlName=\\\"dob\\\" style=\\\"color: #919090;\\\">\\n\\n                            </ion-datetime>\\n                            <ion-icon name=\\\"calendar-outline\\\" style=\\\"color: #fff;\\\"></ion-icon>\\n                        </ion-item>\\n\\n                        <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.dob.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.dob.errors.required\\\">*Dob is required</div>\\n                        </div>\\n                    </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-item>\\n                            <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                                Gender</ion-label>\\n                            <ion-select style=\\\"margin-left: 40px; color: #A4A4A4;\\\" placeholder=\\\"Select\\\" formControlName=\\\"gender\\\">\\n                                <ion-select-option value=\\\"f\\\" style=\\\"color: #fff;\\\">Female</ion-select-option>\\n                                <ion-select-option value=\\\"m\\\" style=\\\"color: #fff;\\\">Male</ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.gender.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.gender.errors.required\\\">*Gender is required</div>\\n                        </div>\\n                    </ion-col>\\n                </ion-row>\\n\\n                <!-- <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                Address Title</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"addressTitle\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.addressTitle.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.addressTitle.errors.required\\\">*AddressTitle is required</div>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                Address</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"address1\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.address1.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.address1.errors.required\\\">*Address is required</div>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                Landmark</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"address2\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.address2.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.address2.errors.required\\\">*Landmark is required</div>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                City</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"city\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.city.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.city.errors.required\\\">*City is required</div>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                Pincode</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"pincode\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.pincode.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.pincode.errors.required\\\">*Pincode is required</div>\\n              <div *ngIf=\\\"f.pincode.errors.pattern\\\">Enter valid *Pincode</div>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                State</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"state\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.pincode.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.state.errors.required\\\">*state is required</div>\\n\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"fixed\\\" style=\\\"color: #919090;\\\">\\n                Country</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"country\\\">\\n              </ion-input>\\n            </ion-item>\\n            <div id=\\\"errorStyle\\\" *ngIf=\\\"checkValid && f.country.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.country.errors.required\\\">*Country is required</div>\\n\\n            </div>\\n          </ion-col>\\n        </ion-row> -->\\n\\n                <button class=\\\"button-submit\\\" color=\\\"primary\\\" type=\\\"ngSubmit\\\">\\n          Sign Up\\n        </button>\\n            </form>\\n        </ion-card>\\n    </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\nimport { SignupService } from './signup.service';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    IonicModule,\n    SignupPageRoutingModule\n  ],\n  providers: [SignupService, DatePicker],\n\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","export default \".background {\\n  --background:rgb(6, 15, 66);\\n  margin-top: 200px !important;\\n}\\n\\nion-item {\\n  --background: rgba(0, 0, 0, 0) !important;\\n  background-color: transparent;\\n  --border-color: #a4a4a4;\\n}\\n\\n.text {\\n  color: #A4A4A4;\\n  text-align: center;\\n  font-size: 30px;\\n  margin-top: 40px;\\n}\\n\\nion-toolbar {\\n  --background: transparent;\\n  --ion-color-base: transparent !important;\\n  height: 94px;\\n}\\n\\nion-icon {\\n  color: #a4a4a4;\\n  font-size: 30px;\\n}\\n\\nion-input {\\n  color: #fff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwL0Q6XFxQcm9qZWN0c1xcY29ubmVjdEJhemFyXFxEZWxpdmVyeUFwcFxcc2FraWJzaWRkaXF1aS1jYXJpbmdtb3RoZXJfZGVsaXZlcnktZDE4OGQ3MjJlZGIzL3NyY1xcYXBwXFxzaWdudXBcXHNpZ251cC5wYWdlLnNjc3MiLCJzcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsMkJBQUE7RUFDQSw0QkFBQTtBQ0FKOztBREdFO0VBQ0UseUNBQUE7RUFDQSw2QkFBQTtFQUNBLHVCQUFBO0FDQUo7O0FESUU7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUNESjs7QURPQTtFQUNFLHlCQUFBO0VBQ0Esd0NBQUE7RUFDQSxZQUFBO0FDSkY7O0FET0M7RUFDQyxjQUFBO0VBQ0EsZUFBQTtBQ0pGOztBRE9BO0VBQ0UsV0FBQTtBQ0pGIiwiZmlsZSI6InNyYy9hcHAvc2lnbnVwL3NpZ251cC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgLmJhY2tncm91bmQge1xuICAgIC0tYmFja2dyb3VuZDpyZ2IoNiwgMTUsIDY2KTtcbiAgICBtYXJnaW4tdG9wOjIwMHB4IWltcG9ydGFudDtcbiAgfVxuICBcbiAgaW9uLWl0ZW0ge1xuICAgIC0tYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwKSAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIC0tYm9yZGVyLWNvbG9yOiAgI2E0YTRhNDtcbiAgICAvLyAtLWJvcmRlci1jb2xvcjogcmdiYSgwLDAsMCwwKSFpbXBvcnRhbnQ7XG4gIH1cblxuICAudGV4dCB7XG4gICAgY29sb3I6I0E0QTRBNDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIG1hcmdpbi10b3A6IDQwcHg7XG5cbiAgfVxuXG5cblxuaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAtLWlvbi1jb2xvci1iYXNlOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDk0cHg7XG59XG5cbiBpb24taWNvbiB7XG4gIGNvbG9yOiNhNGE0YTQ7IFxuICBmb250LXNpemU6IDMwcHg7XG59XG5cbmlvbi1pbnB1dCB7XG4gIGNvbG9yOiNmZmY7XG59XG5cbiBcbiAiLCIuYmFja2dyb3VuZCB7XG4gIC0tYmFja2dyb3VuZDpyZ2IoNiwgMTUsIDY2KTtcbiAgbWFyZ2luLXRvcDogMjAwcHggIWltcG9ydGFudDtcbn1cblxuaW9uLWl0ZW0ge1xuICAtLWJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMCkgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC0tYm9yZGVyLWNvbG9yOiAjYTRhNGE0O1xufVxuXG4udGV4dCB7XG4gIGNvbG9yOiAjQTRBNEE0O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgbWFyZ2luLXRvcDogNDBweDtcbn1cblxuaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAtLWlvbi1jb2xvci1iYXNlOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDk0cHg7XG59XG5cbmlvbi1pY29uIHtcbiAgY29sb3I6ICNhNGE0YTQ7XG4gIGZvbnQtc2l6ZTogMzBweDtcbn1cblxuaW9uLWlucHV0IHtcbiAgY29sb3I6ICNmZmY7XG59Il19 */\";","import { Component, OnInit } from \"@angular/core\";\nimport { SignupService } from \"./signup.service\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { error } from \"protractor\";\nimport { LoadingController } from \"@ionic/angular\";\nimport { Router } from '@angular/router';\nimport { CommomService } from '../commom.service';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.page.html\",\n  styleUrls: [\"./signup.page.scss\"],\n})\nexport class SignupPage implements OnInit {\n\n  SignUpForm: FormGroup;\n  checkValid = false;\n  myDate: any;\n\n  constructor(\n    private api: SignupService,\n    private formBuilder: FormBuilder,\n    private alert: CommomService,\n    private router: Router,\n    private datePicker: DatePicker,\n    private loadingController: LoadingController\n  ) { }\n\n  ngOnInit() {\n    this.SignUpForm = this.formBuilder.group({\n\n      dob:['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      fullName: ['', [Validators.required]],\n      gender: ['', [Validators.required]],\n      mobile: ['', [Validators.pattern(/^[6-9]\\d{9}$/), Validators.required]],\n      password: ['', [Validators.required]],\n \n    });\n  }\n\n  // getter method to access form fields\n  get f() {\n    return this.SignUpForm.controls;\n  }\n\n  async registerUser(value) {\n    value.user = \"user\";\n    \n    this.checkValid = true;\n    if (this.SignUpForm.invalid) {\n      return;\n    }\n    const p = this.api.registerUser(value);\n    const loading = await this.loadingController.create({\n      message: 'Please wait...'\n    });\n    loading.present();\n\n    p.subscribe(async (res) => {\n      await loading.dismiss();\n      localStorage.setItem('userId',res.userId);\n      this.router.navigate(['/activate-otp']);\n    },\n      // tslint:disable-next-line: no-unused-expression\n      async (error: any) => {\n        await loading.dismiss();\n        if (error.status === 400) {\n          await loading.dismiss();\n          const mes = 'Invalid Details';\n          this.alert.presentToast(mes);\n\n\n        }\n        await loading.dismiss();\n        if (error.status === 500 && error.error.message === 'Email already exists') {\n          this.alert.presentToast('Email already exists');\n\n        }\n    });\n  }\n\n\n  showDatepicker(){\n    this.datePicker.show({\n      date: new Date(),\n      mode: 'date',\n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_DARK,\n      okText:\"Save Date\",\n      todayText:\"Set Today\"\n    }).then(\n      date => {\n        this.myDate = date.getDate()+\"/\"+date.toLocaleString('default', { month: 'long' })+\"/\"+date.getFullYear();\n      },\n      err => console.log('Error occurred while getting date: ', err)\n    );\n  }  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { delay } from 'rxjs/operators';\nimport { UniversalapiService } from '../universalapi.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n  baseUrl = UniversalapiService.url;\n\n  constructor(private http: HttpClient) { }\n\n\n  registerUser(value) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    const param = {\n  \"dob\":     value.dob,\n  \"email\":     value.email,\n  \"fullName\":     value.fullName,\n  \"gender\": value.gender,\n  \"mobile\":     value.mobile,\n  \"password\":     value.password,\n  \"userType\": value.user\n\n    };\n    return this.http.post<any>(this.baseUrl + '/users/create',\n      param, { headers }).pipe(map(res => res));\n\n  }\n\n\n\n}\n"]}